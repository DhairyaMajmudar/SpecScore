openapi: 3.0.0
info:
  title: Pet Store API
  description: A sample API that uses a petstore as an example to demonstrate features
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: https://api.petstore.com/v1
    description: Production server
  - url: https://staging-api.petstore.com/v1
    description: Staging server
security:
  - ApiKeyAuth: []
paths:
  /pets:
    get:
      summary: List all pets
      description: Retrieve a list of all pets in the store
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
              example:
                - id: 1
                  name: Fluffy
                  tag: cat
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      description: Add a new pet to the store
      tags:
        - pets
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPet"
            example:
              name: Buddy
              tag: dog
      responses:
        "201":
          description: Pet created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Get a specific pet
      description: Retrieve information about a specific pet
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          description: The id of the pet to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              example:
                id: 1
                name: Fluffy
                tag: cat
        "404":
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the pet
        name:
          type: string
          description: Display name of the pet
        tag:
          type: string
          description: Tag to classify the pet
    NewPet:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Display name of the pet
        tag:
          type: string
          description: Tag to classify the pet
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
